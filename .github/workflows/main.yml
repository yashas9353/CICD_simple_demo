name: CI/CD Pipeline

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Test with pytest
        run: |
          pip install pytest
          pytest test.py

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/python-example:latest

  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - name: pull docker image
        run: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/python-example:latest

      - name: stop old container if running
        run: |
          CONTAINER_ID=$(docker ps -q -f "publish=8080")
          if [ -n "$CONTAINER_ID" ]; then
              docker stop $CONTAINER_ID
              docker rm $CONTAINER_ID
          fi

      - name: run new container
        run: |
          docker run -d -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/python-example:latest
